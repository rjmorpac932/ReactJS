{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjimemon\\\\Desktop\\\\DAW\\\\Segundo\\\\HLC\\\\ProyectosReact\\\\ProyectoPracticas\\\\ReactJS\\\\src\\\\ComponentesP2\\\\EliminarAlumno.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//Componente Tabla para almacenar los alumnos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tabla = () => {\n  _s();\n  //Estado para almacenar los datos de la tabla\n  //Define un estado llamado 'data' utilizando el hook useState.\n  //'data' almacena la información de los alumnos en forma de un array de objetos.\n  //'setData' es la función que se utiliza para actualizar el estado 'data'.\n  //El estado inicial se establece con un array que contiene tres objetos, cada uno representando un alumno.\n  const [data, setData] = useState([{\n    id: 1,\n    nombre: 'Pablo',\n    apellidos: 'Márquez'\n  }, {\n    id: 2,\n    nombre: 'Marcos',\n    apellidos: 'Gómez'\n  }, {\n    id: 3,\n    nombre: 'Andrea',\n    apellidos: 'García'\n  }]);\n\n  //Estado para almacenar la fila seleccionada\n  //Define un estado llamado 'filaSeleccionada' utilizando el hook useState.\n  //'filaSeleccionada' se utiliza para almacenar la identificación (id) de la fila seleccionada en la tabla.\n  //'setFilaSeleccionada' es la función que se utiliza para actualizar el estado 'filaSeleccionada'.\n  //El estado inicial se establece en 'null', indicando que inicialmente no hay ninguna fila seleccionada.\n  const [filaSeleccionada, setFilaSeleccionada] = useState(null);\n\n  //Define una función llamada 'handleBorrarFila' que usa un parámetro 'id'.\n  //Esta función se utiliza para marcar la fila con el 'id' proporcionado como seleccionada.\n  const handleBorrarFila = id => {\n    //Utiliza 'setFilaSeleccionada' para actualizar el estado 'filaSeleccionada' con el 'id' proporcionado.\n    //Esta acción indica que la fila con el 'id' proporcionado está marcada como seleccionada.\n    setFilaSeleccionada(id);\n  };\n\n  //Define una función llamada 'handleConfirmarBorrado' sin parámetros.\n  //Esta función se utiliza para confirmar el borrado de la fila seleccionada.\n  const handleConfirmarBorrado = () => {\n    //Filtra los datos para eliminar la fila seleccionada.\n    //Utiliza el método 'filter' para crear un nuevo array ('updatedData') excluyendo la fila con 'id' igual a 'filaSeleccionada'.\n    const updatedData = data.filter(item => item.id !== filaSeleccionada);\n\n    //Actualiza el estado 'data' con el nuevo array que no contiene la fila seleccionada.\n    setData(updatedData);\n\n    //Después de borrar la fila, se establece 'filaSeleccionada' de nuevo en 'null'.\n    //Esto indica que no hay ninguna fila seleccionada después del borrado.\n    setFilaSeleccionada(null);\n  };\n\n  //Esta función se utiliza para cerrar el modal y restablecer el estado 'filaSeleccionada' a 'null'.\n  const handleCerrarModal = () => {\n    //Establece 'filaSeleccionada' en 'null'.\n    //Indica que no hay ninguna fila seleccionada después de cerrar el modal.\n    setFilaSeleccionada(null);\n  };\n\n  //Esta función se utiliza para obtener los datos de la fila seleccionada.\n  const getFilaSeleccionadaData = () => {\n    //Utiliza el método 'find' en el array 'data' para encontrar la fila con 'id' igual a 'filaSeleccionada'.\n    //Almacena la fila encontrada en la variable 'filaSeleccionadaData'.\n    const filaSeleccionadaData = data.find(item => item.id === filaSeleccionada);\n\n    //Devuelve la 'filaSeleccionadaData'.\n    return filaSeleccionadaData;\n  };\n\n  //Llama a la función 'getFilaSeleccionadaData' para obtener los datos de la fila seleccionada.\n  //Almacena el resultado en la variable 'filaSeleccionadaData'.\n  const filaSeleccionadaData = getFilaSeleccionadaData();\n\n  //Define una función llamada 'handleMouseOver' que usa un parámetro 'id'.\n  //Esta función se utiliza para manejar el evento cuando el ratón está sobre una fila.\n  const handleMouseOver = id => {\n    console.log(`El ratón está sobre la fila con ID ${id}`);\n  };\n\n  //Devuelve el JSX que representa la tabla y el modal para confirmar\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-hover text-center align-middle caption-top\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"Lista de alumnos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"table-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Apellidos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Borrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(fila => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onMouseOver: () => handleMouseOver(fila.id),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: fila.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: fila.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: fila.apellidos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-danger\",\n              onClick: () => handleBorrarFila(fila.id),\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, fila.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: !!filaSeleccionada,\n      onHide: handleCerrarModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Confirmar borrado de alumno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: filaSeleccionadaData && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xBFSeguro que quiere eliminar a \", filaSeleccionadaData.nombre, ' ', filaSeleccionadaData.apellidos, \" del sistema?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-secondary\",\n          onClick: handleCerrarModal,\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-danger\",\n          onClick: handleConfirmarBorrado,\n          children: \"Eliminar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(Tabla, \"7naOx2CpQ3MB2FWFozcXhouD4Ck=\");\n_c = Tabla;\nexport default Tabla;\nvar _c;\n$RefreshReg$(_c, \"Tabla\");","map":{"version":3,"names":["React","useState","Button","Modal","jsxDEV","_jsxDEV","Tabla","_s","data","setData","id","nombre","apellidos","filaSeleccionada","setFilaSeleccionada","handleBorrarFila","handleConfirmarBorrado","updatedData","filter","item","handleCerrarModal","getFilaSeleccionadaData","filaSeleccionadaData","find","handleMouseOver","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","fila","onMouseOver","onClick","show","onHide","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["C:/Users/jjimemon/Desktop/DAW/Segundo/HLC/ProyectosReact/ProyectoPracticas/ReactJS/src/ComponentesP2/EliminarAlumno.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n//Componente Tabla para almacenar los alumnos\r\nconst Tabla = () => {\r\n    //Estado para almacenar los datos de la tabla\r\n    //Define un estado llamado 'data' utilizando el hook useState.\r\n    //'data' almacena la información de los alumnos en forma de un array de objetos.\r\n    //'setData' es la función que se utiliza para actualizar el estado 'data'.\r\n    //El estado inicial se establece con un array que contiene tres objetos, cada uno representando un alumno.\r\n    const [data, setData] = useState([\r\n        { id: 1, nombre: 'Pablo', apellidos: 'Márquez' },\r\n        { id: 2, nombre: 'Marcos', apellidos: 'Gómez' },\r\n        { id: 3, nombre: 'Andrea', apellidos: 'García' },\r\n    ]);\r\n\r\n    //Estado para almacenar la fila seleccionada\r\n    //Define un estado llamado 'filaSeleccionada' utilizando el hook useState.\r\n    //'filaSeleccionada' se utiliza para almacenar la identificación (id) de la fila seleccionada en la tabla.\r\n    //'setFilaSeleccionada' es la función que se utiliza para actualizar el estado 'filaSeleccionada'.\r\n    //El estado inicial se establece en 'null', indicando que inicialmente no hay ninguna fila seleccionada.\r\n    const [filaSeleccionada, setFilaSeleccionada] = useState(null);\r\n\r\n    //Define una función llamada 'handleBorrarFila' que usa un parámetro 'id'.\r\n    //Esta función se utiliza para marcar la fila con el 'id' proporcionado como seleccionada.\r\n    const handleBorrarFila = (id) => {\r\n        //Utiliza 'setFilaSeleccionada' para actualizar el estado 'filaSeleccionada' con el 'id' proporcionado.\r\n        //Esta acción indica que la fila con el 'id' proporcionado está marcada como seleccionada.\r\n        setFilaSeleccionada(id);\r\n    }\r\n\r\n    //Define una función llamada 'handleConfirmarBorrado' sin parámetros.\r\n    //Esta función se utiliza para confirmar el borrado de la fila seleccionada.\r\n    const handleConfirmarBorrado = () => {\r\n        //Filtra los datos para eliminar la fila seleccionada.\r\n        //Utiliza el método 'filter' para crear un nuevo array ('updatedData') excluyendo la fila con 'id' igual a 'filaSeleccionada'.\r\n        const updatedData = data.filter(item => item.id !== filaSeleccionada);\r\n\r\n        //Actualiza el estado 'data' con el nuevo array que no contiene la fila seleccionada.\r\n        setData(updatedData);\r\n\r\n        //Después de borrar la fila, se establece 'filaSeleccionada' de nuevo en 'null'.\r\n        //Esto indica que no hay ninguna fila seleccionada después del borrado.\r\n        setFilaSeleccionada(null);\r\n    }\r\n\r\n    //Esta función se utiliza para cerrar el modal y restablecer el estado 'filaSeleccionada' a 'null'.\r\n    const handleCerrarModal = () => {\r\n        //Establece 'filaSeleccionada' en 'null'.\r\n        //Indica que no hay ninguna fila seleccionada después de cerrar el modal.\r\n        setFilaSeleccionada(null);\r\n    }\r\n\r\n    //Esta función se utiliza para obtener los datos de la fila seleccionada.\r\n    const getFilaSeleccionadaData = () => {\r\n        //Utiliza el método 'find' en el array 'data' para encontrar la fila con 'id' igual a 'filaSeleccionada'.\r\n        //Almacena la fila encontrada en la variable 'filaSeleccionadaData'.\r\n        const filaSeleccionadaData = data.find(item => item.id === filaSeleccionada);\r\n\r\n        //Devuelve la 'filaSeleccionadaData'.\r\n        return filaSeleccionadaData;\r\n    }\r\n\r\n    //Llama a la función 'getFilaSeleccionadaData' para obtener los datos de la fila seleccionada.\r\n    //Almacena el resultado en la variable 'filaSeleccionadaData'.\r\n    const filaSeleccionadaData = getFilaSeleccionadaData();\r\n\r\n    //Define una función llamada 'handleMouseOver' que usa un parámetro 'id'.\r\n    //Esta función se utiliza para manejar el evento cuando el ratón está sobre una fila.\r\n    const handleMouseOver = (id) => {\r\n        console.log(`El ratón está sobre la fila con ID ${id}`);\r\n    }\r\n\r\n    //Devuelve el JSX que representa la tabla y el modal para confirmar\r\n    return (\r\n        <div className='container mt-4'>\r\n            <table className='table table-hover text-center align-middle caption-top'>\r\n                <caption>Lista de alumnos</caption>\r\n                <thead className='table-dark'>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nombre</th>\r\n                        <th>Apellidos</th>\r\n                        <th>Borrar</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {/* Mapea los datos para crear filas de la tabla */}\r\n                    {data.map((fila) => (\r\n                        <tr key={fila.id} onMouseOver={() => handleMouseOver(fila.id)}>\r\n                            <td>{fila.id}</td>\r\n                            <td>{fila.nombre}</td>\r\n                            <td>{fila.apellidos}</td>\r\n                            <td>\r\n                                {/* Botón para borrar la fila */}\r\n                                <Button className='btn btn-danger' onClick={() => handleBorrarFila(fila.id)}>\r\n                                    <b>Eliminar</b>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Modal para confirmar el borrado de la fila seleccionada */}\r\n            {/* show determina si se muestra el modal(se pone true si hay una fila seleccionada) */}\r\n            {/* onHide ejecuta la funcion para cerrar el modal */}\r\n            <Modal show={!!filaSeleccionada} onHide={handleCerrarModal}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirmar borrado de alumno</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {/* Verifica si 'filaSeleccionadaData' existe antes de renderizar el mensaje */}\r\n                    {filaSeleccionadaData && (\r\n                        <p>\r\n                            {/* Muestra un mensaje con el nombre y apellidos de la fila seleccionada */}\r\n                            ¿Seguro que quiere eliminar a {filaSeleccionadaData.nombre}{' '}{filaSeleccionadaData.apellidos} del sistema?\r\n                        </p>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {/* Botón para cancelar el borrado y cerrar el modal */}\r\n                    <Button className='btn btn-secondary' onClick={handleCerrarModal}>\r\n                        Cancelar\r\n                    </Button>\r\n                    {/* Botón para confirmar el borrado de la fila seleccionada */}\r\n                    <Button className='btn btn-danger' onClick={handleConfirmarBorrado}>\r\n                        Eliminar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tabla;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}